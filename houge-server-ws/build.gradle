apply plugin: "application"
apply plugin: "com.bmuschko.docker-remote-api"

mainClassName = "cool.houge.ws.main.WsMain"

jar {
  manifest {
    attributes "Multi-Release": "true"
  }
}

File dockerInputDir() {
  def f = file("${buildDir}/docker/")
  if (!f.exists()) {
    f.mkdirs()
  }
  return f
}

task copyDockerResource {
  group "docker"
  doLast {
    copy {
      from("${buildDir}/libs")
      into(dockerInputDir())
      include("*-all.jar")
      rename(".*-all.jar", "app.jar")
    }
    copy {
      from(projectDir)
      into(dockerInputDir())
      include("Dockerfile")
    }
  }
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  group "docker"
  dependsOn("shadowJar", "copyDockerResource")
  inputDir = dockerInputDir()
  images.addAll("kevin70/${project.name}:latest", "kevin70/${project.name}:${version}".toString())
}

dependencies {
  implementation(project(":houge-core"))
  implementation("com.typesafe:config")
  implementation("com.google.guava:guava")
  implementation("com.google.inject:guice")
  implementation("org.roaringbitmap:RoaringBitmap")
  implementation("io.projectreactor.netty:reactor-netty")
  implementation("com.fasterxml.jackson.core:jackson-databind")
  implementation("io.micrometer:micrometer-registry-prometheus")
  implementation("com.github.ben-manes.caffeine:caffeine")

  // gRPC
  implementation(project(":houge-grpc"))
  implementation("io.grpc:grpc-netty")
  implementation("io.grpc:grpc-protobuf")
  implementation("io.grpc:grpc-stub")

  // 日志
  implementation("org.apache.logging.log4j:log4j-core")
  implementation("org.apache.logging.log4j:log4j-slf4j-impl")

  // 工具
  implementation("io.projectreactor:reactor-tools")
}
