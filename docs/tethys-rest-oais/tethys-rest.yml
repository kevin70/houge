openapi: "3.0.3"
info:
  version: 1.0.0
  title: Tethys REST RESTful 接口
servers:
  - url: http://localhost:11019/
tags:
  - name: SUPPORT
    description: 系统支撑
  - name: TEST
    description: 测试专用
  - name: MESSAGE
    description: IM 消息
x-tagGroups:
  - name: 支撑
    tags: [SUPPORT]
  - name: 测试
    tags: [TEST]
  - name: 消息
    tags: [MESSAGE]
paths:
  /-/info:
    get:
      tags: [SUPPORT]
      summary: 应用信息
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: { "app": { "name": "tethys-rest", "version": "unknown", "fid": 98847 }, "java": { "version": "11.0.8", "vendor": "Oracle Corporation" } }
  /-/health:
    get:
      tags: [SUPPORT]
      summary: 应用健康状况
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: { "status": "UP" }
  /token/{uid}:
    parameters:
      - name: uid
        in: path
        required: true
        description: 用户 ID
        schema:
          type: integer
          format: int64
    post:
      tags: [TEST]
      summary: 生成用户访问令牌
      description: |
        **测试专用** 快速通过用户 ID 生成访问令牌
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                properties:
                  access_token:
                    type: string
                    description: 访问令牌
  /message-ids:
    get:
      parameters:
        - name: limit
          in: query
          description: 返回 ID 的最大数量
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
      tags: [MESSAGE]
      security: [AccessToken:[]]
      summary: 获取 IM 消息 ID
      description: |
        返回 IM 消息 ID 列表，该列表中的 ID 用于在后续聊天消息中使用，每个 ID 仅可使用一次。
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: IM 消息 ID
  /messages:
    get:
      tags: [MESSAGE]
      security: [AccessToken:[]]
      summary: 获取指定时间以后的消息
      description: |
        如果返回的消息数组的长度小于 `limit` 请求查询参数值，则代表服务端没有更多的消息不需要继续查询，反之则
        代表服务端还有更多的消息，客户端需要继续调用些接口拉取私聊信息，直到消息数组的长度小于 `limit`。
      parameters:
        - name: begin_time
          in: query
          description: |
            查询 `begin_time` 之后（包含 `begin_time`）接收到的消息。

            默认仅支持查询`3天（72小时）`以内的消息查询，时间超出范围将默认将 `begin_time` 设置为可查询的最早时间。
          schema:
            type: string
            format: date-time
        - name: offset
          in: query
          description: 查询偏移量
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: 返回最大的条数
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 500
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
  /messages/read:
    put:
      tags: [MESSAGE]
      security: [AccessToken:[]]
      summary: 批量更新消息已读状态
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - message_ids
              properties:
                message_ids:
                  type: array
                  description: 消息 ID 列表，同时最大支持 100 条消息的已读状态更新
                  maxItems: 100
                  items:
                    type: string
                    default: 7K7KJKK56K23OMY
      responses:
        "204":
          description: OK
components:
  securitySchemes:
    AccessToken:
      type: apiKey
      description: 访问令牌
      name: access_token
      in: query
  schemas:
    Message:
      type: object
      required:
        - id
        - sender_id
        - receiver_id
        - content
        - create_time
      properties:
        id:
          type: string
          description: 消息 ID，全局唯一
          example: 7K7KJKK56K23OMY
        sender_id:
          type: string
          description: 消息发送者 ID
        receiver_id:
          type: string
          description: 消息接收者 ID
        kind:
          type: integer
          enum: [1, 2, 3]
          description: |
            消息类型
            - `1` 系统消息
            - `2` 私聊消息
            - `3` 群聊消息
        content:
          type: string
          description: 消息内容
        content_kind:
          type: integer
          enum: [1, 2, 3, 4]
          description: |
            消息类型
            - `1` 普通文本消息
            - `2` 图片消息
            - `3` 音频消息
            - `4` 视频消息
        url:
          type: string
          description: 统一资源定位器（图片URL、视频URL）
        custom_args:
          type: string
          description: 自定义参数
        unread:
          type: integer
          default: 1
          description: |
            消息是否未读
            - `1` 未读
            - `0` 已读
        create_time:
          type: string
          format: date-time
          description: 消息创建时间