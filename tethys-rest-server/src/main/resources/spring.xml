<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <!--
    按照顺序加载配置文件，后加载的配置将覆盖前加载的配置内容。

    - classpath*:tethys.properties
    - file:tethys.properties
    - file:/etc/tethys/tethys.properties
    - file:tethys-dev.properties

    file:tethys-dev.properties 开发配置，便于开发。
  -->
  <context:property-placeholder
      location="classpath*:tethys.properties,classpath*:tethys.properties,file:/etc/tethys/tethys.properties,file:tethys-dev.properties"
      ignore-resource-not-found="true"
      file-encoding="UTF-8"
      local-override="true"/>

  <import resource="classpath*:spring/spring-*.xml"/>

  <bean id="applicationIdentifier" class="top.yein.tethys.rest.RestApplicationIdentifier">
    <constructor-arg name="serverInstanceRepository" ref="serverInstanceRepository"/>
  </bean>

  <!-- service -->
  <bean id="tokenService" class="top.yein.tethys.core.auth.TokenServiceImpl">
    <constructor-arg name="jwtSecretRepository" ref="jwtSecretRepository"/>
  </bean>
  <bean id="authService" class="top.yein.tethys.core.auth.JwsAuthService">
    <constructor-arg name="jwtSecretRepository" ref="jwtSecretRepository"/>
  </bean>
  <bean id="messageIdGenerator" class="top.yein.tethys.core.id.YeinGidMessageIdGenerator">
    <constructor-arg name="applicationIdentifier" ref="applicationIdentifier"/>
  </bean>

  <bean id="restServer" class="top.yein.tethys.rest.server.RestServer">
    <constructor-arg name="addr" value="${rest-server.addr}"/>
    <constructor-arg name="customRouters" ref="customRouters"/>
  </bean>

</beans>